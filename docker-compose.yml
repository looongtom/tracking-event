services:
  receive_event:
    build:
      context: ./event_sender
      dockerfile: Dockerfile
    container_name: rest_server_1
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://mongo:27017
    depends_on:
      - kafka
      - mongo
    networks:
      - custom_network
    env_file:
      - .env

  update_event:
    build:
      context: ./destination
      dockerfile: Dockerfile
    container_name: rest_server_2
    ports:
      - "8081:8081"
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://mongo:27017
    depends_on:
      - kafka
      - mongo
    networks:
      - custom_network
    env_file:
      - .env

  kafka_listener:
    build:
      context: ./event-listener
      dockerfile: Dockerfile
    container_name: kafka_listener
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://mongo:27017
    depends_on:
      - kafka
      - mongo
    networks:
      - custom_network
    env_file:
      - .env

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - custom_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - custom_network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - custom_network

networks:
  custom_network:
    driver: bridge